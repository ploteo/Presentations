library(tidyverse)
p <- bibliography_entries("articles.bib")
p
p %>% mutate(order=nrow(p):1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA)
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(lme4)
library(formattable)
library(knitr)
library(kableExtra)
library(texreg)
library(r2glmm)
library(MuMIn)
library(GLMMadaptive)#count data
library(pscl)#count data
library(corrplot)
library(Hmisc)
library(sjPlot)
setwd("~/Google Drive/WORK/esperimenti/trento/Innsbruck_BHKP/paper/submission_JEBO/R&R")
load("~/Google Drive/WORK/esperimenti/trento/Innsbruck_BHKP/analisi/DATA.RData")
#
# # #subjects table: all conditions
# subjects <- read_excel("../../../analisi/subjects.xlsx")
# # ##investments with lagged return (t-1)
# investments <- read_excel("../../../analisi/investments.xlsx")
# # #investors table: all conditions
# investors <- read_excel("../../../analisi/investors.xlsx")
# # #training
# training <- read_excel("../../../analisi/training.xlsx")
subjects <- subjects %>% mutate(Gender=ifelse(Gender==1,"Female","Male")) %>% mutate(Gender=as.factor(Gender))
subjects <- subjects %>% mutate(RiskAversion=ifelse(RiskAversion==1,"RA","nRA")) %>% mutate(RiskAversion=as.factor(RiskAversion))
subjects <- subjects %>% mutate(LossAversion=ifelse(LossAversion==1,"LA","nLA")) %>% mutate(LossAversion=as.factor(LossAversion))
subjects <- subjects %>% mutate(ind_fin_lit=0) %>%
mutate(ind_fin_lit=ifelse(quest_1==1,ind_fin_lit+1,ind_fin_lit)) %>%
mutate(ind_fin_lit=ifelse(quest_2==1,ind_fin_lit+1,ind_fin_lit)) %>% mutate(ind_fin_lit=ifelse(quest_3==1,ind_fin_lit+1,ind_fin_lit)) %>%
mutate(ind_fin_lit=ifelse(quest_4==3,ind_fin_lit+1,ind_fin_lit)) %>%
mutate(ind_fin_lit=ifelse(quest_5==1,ind_fin_lit+1,ind_fin_lit)) %>%
mutate(ind_fin_lit=ifelse(quest_6==1,ind_fin_lit+1,ind_fin_lit)) %>%
mutate(ind_fin_lit=ind_fin_lit/6)
# Managers
investments <- full_join(
investments %>% select(-LossAversion,-RiskAversion,-Age,-Gender),
subjects %>% select(SubjectID,ind_fin_lit,LossAversion,RiskAversion,Age,Gender),by="SubjectID")
# Investors
investors <- full_join(
investors %>% select(-LossAversion,-RiskAversion,-Age,-Gender),
subjects %>% select(SubjectID,ind_fin_lit,LossAversion,RiskAversion,Age,Gender),by="SubjectID")
library(tidyverse)
%>%
dt <- full_join(
m %>% gather("p_s","Mean_P",1:101) %>%
mutate(p_s=substr(p_s,4,6)),
sd %>% gather("p_s","SD_P",1:101)  %>%
mutate(p_s=substr(p_s,4,6)), by=c("p_i","p_s")
) %>% mutate(p_i=as.integer(p_i),p_s=as.integer(p_s)) %>%
filter(p_i+p_s<=100) %>%  mutate(Mean_P=round(Mean_P,10),SD_P=round(SD_P,10)) %>% distinct() %>% ungroup() %>% arrange(Mean_P)
dt.s <- select(investments, SubjectID, Period, COMPETITION, DISCLOSURE, PercIndex, PercStock, PercBond) %>% na.omit()
dt.s$COMPETITION <- as.factor(ifelse(dt.s$COMPETITION==1,"Competition","No Competition"))
dt.s$DISCLOSURE <- as.factor(ifelse(dt.s$DISCLOSURE==1,"Disclosure","No Disclosure"))
dt.s$COMPETITION = factor(dt.s$COMPETITION,levels(dt.s$COMPETITION)[c(2,1)])
dt.s$DISCLOSURE = factor(dt.s$DISCLOSURE,levels(dt.s$DISCLOSURE)[c(2,1)])
#dt.s$Asset = factor(dt.s$Asset,levels(factor(dt.s$Asset))[c(3,2,1)])
#---------------------------------------------
#mean/variance functions
#---------------------------------------------
mean_P <- function(p_i,p_s){
return(
(p_i/100)*.05+(p_s/100)*.06+((100-p_i-p_s)/100)*.01
)
}
SD_P <- function(p_i,p_s){
return(
((p_i/100)^2*(.10)^2+(p_s/100)^2*(.20)^2)^(1/2)
)
}
sd <- c()
for (j in seq(0,100,1)){
t <- seq(0,100,1) %>%
map(~ mean_P(.x, j))
m <- bind_cols(m,tibble(unlist(t)))
t <- seq(0,100,1) %>%
map(~ SD_P(.x, j))
sd <- bind_cols(sd,tibble(unlist(t)))
}
m <- c()
sd <- c()
for (j in seq(0,100,1)){
t <- seq(0,100,1) %>%
map(~ mean_P(.x, j))
m <- bind_cols(m,tibble(unlist(t)))
t <- seq(0,100,1) %>%
map(~ SD_P(.x, j))
sd <- bind_cols(sd,tibble(unlist(t)))
}
colnames(m) <- paste("p_s",seq(0,100,1),sep="")
colnames(sd) <- paste("p_s",seq(0,100,1),sep="")
m <- m %>% mutate(p_i=seq(0,100,1))
sd <- sd %>% mutate(p_i=seq(0,100,1))
dt <- full_join(
m %>% gather("p_s","Mean_P",1:101) %>%
mutate(p_s=substr(p_s,4,6)),
sd %>% gather("p_s","SD_P",1:101)  %>%
mutate(p_s=substr(p_s,4,6)), by=c("p_i","p_s")
) %>% mutate(p_i=as.integer(p_i),p_s=as.integer(p_s)) %>%
filter(p_i+p_s<=100) %>%  mutate(Mean_P=round(Mean_P,10),SD_P=round(SD_P,10)) %>% distinct() %>% ungroup() %>% arrange(Mean_P)
stats <- dt.s %>% group_by(DISCLOSURE,COMPETITION) %>% summarise_at("SR",list(Mean=~mean(.),SD=~sd(.),Median=~median(.),Min=~min(.),Max=~max(.)))
dt.s <- dt.s %>% mutate(SR=ifelse(SD_P>0,(Mean_P-0.01)/SD_P,0))
dt.s <- dt.s %>% mutate(SR=ifelse(SD_P>0,(Mean_P-0.01)/SD_P,0))
dt.s <- dt.s %>% mutate(Mean_P=mean_P(PercIndex,PercStock)) %>%
mutate(SD_P=SD_P(PercIndex,PercStock))
dt.s <- dt.s %>% mutate(SR=ifelse(SD_P>0,(Mean_P-0.01)/SD_P,0))
stats <- dt.s %>% group_by(DISCLOSURE,COMPETITION) %>% summarise_at("SR",list(Mean=~mean(.),SD=~sd(.),Median=~median(.),Min=~min(.),Max=~max(.)))
stats %>%
kable("html", caption = "Sharpe Ratio", escape="F", digits=3, font=12) %>%
kable_styling("hover",full_width = F, position = "center")
dt.s %>%
ggplot(aes(x=Period-6,y=SR,group=Period))+
geom_boxplot(outlier.shape = NA, fill="grey78")+
stat_summary(fun.y="mean",geom ="point",shape=23,size=2,fill="grey99",alpha=.5,colour="blue")+
scale_fill_grey(start = 0.2, end = 1)+
scale_y_continuous(limits = quantile(dt.s$SR, c(0.1, 0.9)))+
geom_hline(data=stats,aes(yintercept=Median),linetype=2)+
facet_grid(DISCLOSURE~COMPETITION,switch="y")+
scale_x_continuous(breaks=c(1:13))+
theme_bw()+
labs(
y = "Sharpe Ratio",
x= "Period")+
theme_bw()+
theme(strip.text = element_text(size = 12),
legend.position="none",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x=element_text(size=12)
)
ggsave("SR.pdf",dpi=300, width=7, height=7)
dt.s %>%
ggplot(aes(x=Period-6,y=SR,group=Period))+
geom_boxplot(outlier.shape = NA, fill="grey78")+
stat_summary(fun.y="mean",geom ="point",shape=23,size=2,fill="grey99",alpha=.8,colour="blue")+
scale_fill_grey(start = 0.2, end = 1)+
scale_y_continuous(limits = quantile(dt.s$SR, c(0.1, 0.9)))+
geom_hline(data=stats,aes(yintercept=Median),linetype=2)+
facet_grid(DISCLOSURE~COMPETITION,switch="y")+
scale_x_continuous(breaks=c(1:13))+
theme_bw()+
labs(
y = "Sharpe Ratio",
x= "Period")+
theme_bw()+
theme(strip.text = element_text(size = 12),
legend.position="none",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x=element_text(size=12)
)
ggsave("SR.pdf",dpi=300, width=7, height=7)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA)
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(lme4)
library(formattable)
library(knitr)
library(kableExtra)
library(texreg)
library(GLMMadaptive)
library(r2glmm)
library(MuMIn)
setwd("~/Google Drive/WORK/esperimenti/trento/Innsbruck_BHKP/analisi/results")
# see variables.xlsx for the descrioption
# #subjects table: all conditions + questionnaire
# subjects <- read_excel("subjects.xlsx")
# ##investments with lagged return (t-1)
# investments <- read_excel("investments.xlsx")
# #investors table: all conditions
# investors <- read_excel("investors.xlsx")
# #training
# training <- read_excel("training.xlsx")
load("~/Google Drive/WORK/esperimenti/trento/Innsbruck_BHKP/analisi/DATA.RData")
dt.g <-
bind_rows(
investors %>% filter(SelectedManager!=5) %>%  select(Period,PerformanceFee,ManagementFee,COMPETITION,DISCLOSURE) %>%
mutate(Fee="Paid"),
investments %>% select(Period,PerformanceFee,ManagementFee,COMPETITION,DISCLOSURE) %>%
mutate(Fee="Posted")
)
#just to reorder them
#rename
dt.g$COMPETITION <- as.factor(ifelse(dt.g$COMPETITION==1,"Competition","No Competition"))
dt.g$DISCLOSURE <- as.factor(ifelse(dt.g$DISCLOSURE==1,"Disclosure","No Disclosure"))
dt.s <- select(investments, Period, COMPETITION, DISCLOSURE, PercIndex, PercStock, PercBond)
dt.g <- dt.s %>% gather(Asset, `PercIndex:PercBond`, -Period, -COMPETITION, -DISCLOSURE)
dt.g <- rename(dt.g, Share=`PercIndex:PercBond`)
dt.g$Asset <- substr(dt.g$Asset,5,9)
dt.g$COMPETITION <- as.factor(ifelse(dt.g$COMPETITION==1,"Competition","No Competition"))
dt.g$DISCLOSURE <- as.factor(ifelse(dt.g$DISCLOSURE==1,"Disclosure","No Disclosure"))
dt.g$COMPETITION = factor(dt.g$COMPETITION,levels(dt.g$COMPETITION)[c(2,1)])
dt.g$DISCLOSURE = factor(dt.g$DISCLOSURE,levels(dt.g$DISCLOSURE)[c(2,1)])
dt.g$Asset = factor(dt.g$Asset,levels(factor(dt.g$Asset))[c(3,2,1)])
ggplot(dt.g,aes(x=Asset,y=Share,fill=Asset))+
geom_boxplot(width=.6, alpha=.5,colour="black")+
stat_summary(fun.y="mean",geom ="point",shape=23,size=4,fill="grey99",alpha=.8,colour="blue")+
scale_fill_grey(start = 0.2, end = 1)+
# scale_fill_manual(values=getPalette)+
facet_grid(as.factor(DISCLOSURE)~as.factor(COMPETITION),switch="y")+
theme_bw()+
labs(title="",
subtitle="",
y = "Percentage of investments",
x= "")+
theme_bw()+
theme(strip.text = element_text(size = 12),
legend.position="none",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x=element_text(size=12)
)
ggsave("Fig_3.pdf",dpi=300, width=7, height=7)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA)
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(DGSent) %>% summarise_at("DGSent",list(Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0))
library(tidyverse)
setwd("~/Google Drive/WORK/altro/referaggi/NAT_HUM_BEHAV_110820/GISM")
d <- read_csv("GenIndSelfMasses.csv")
# ID		- Unique Subject ID, 1 to 640.
# Treatment	- Experimental treatment, 0= Ex Ante, 1= Ex Post.
# Robber		- Role dummy. 1 if robber, 0 if victim.
# Female  	- Gender dummy. 1 if female, 0 if male.
# Age 		- Age of the participant (in years).
# Econ    	- Field of studies dummy. 1 if economics-related, 0 if not.
# RobbersChoice	- Robber's decision. Can take values 0, 10, 33, 50.
# DecisionTime	- Decision time for the robber's decision (in seconds).
# DGSent		- Decision as sender in the Dictator Game (0 to 10).
# UGSent		- Decision as sender in the Ultimatum Game (0 to 10).
# UGMTA		- Minimal Threshold of Acceptance as receiver in the Ultimatum Game (0 to 10).
# TGSent		- Decision as sender in the Trust Game (0 to 10).
# TGReturn	- Average fraction returned in the Trust Game over all possible positive transfers (0 to 1).
# Donation	- Percentage of earnings donated to charity (0 to 100).
# CharityValue	- Evaluation of the charity, from 1(=Very Bad) to 10(=Very Good).
# Expectation	- Average (elicited) percentage that subject thought would be taken from the victims.
# SelectedRobber 	- Dummy indicating if that subject was selected as robber (1= yes, 0=no).
# PayoffBeforeRob - Euros earned before robbing decision was implemented (not including show-up fee).
# PayoffAfterRob 	- Euros earned after the robbing decision was implemented (but before donation; show-up fee not included).
library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(lme4)
library(formattable)
library(knitr)
library(kableExtra)
library(texreg)
library(r2glmm)
library(MuMIn)
library(GLMMadaptive)#count data
library(pscl)#count data
library(corrplot)
library(Hmisc)
library(sjPlot)
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(DGSent) %>% summarise_at("DGSent",list(Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
d %>% filter(Robber==1)
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(less_50) %>% summarise_at("DGSent",list(Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(less_50) %>% summarise_at("DGSent",list(N=n(),Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(less_50) %>% summarise_at("DGSent",list(N=n(.),Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
d %>% filter(Robber==1) %>% mutate(less_50=ifelse(DGSent<=5,1,0)) %>% group_by(less_50) %>% summarise_at("DGSent",list(N=~n(),Mean=~mean(.),SD=~sd(.),median=~median(.))) %>% kable()
315/320
180/320
options(htmltools.dir.version = FALSE)
library(tidyverse)
d.g <- tibble(y=c(7,3,9,5,5,1),x=c("H","L","H","L","H","L"),t=c("B=A","B=A","B>A","B>A","B<A","B<A")) %>% mutate(t=as.factor(t))
summary <- d.g %>% group_by(t) %>% summarise_at("y",funs(mean))
summary
help(geom_text)
install.packages(zTree)
install.packages("zTree")
install.packages("wesanderson")
stats <- d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
dplyr::group_by(Lott_type, Report) %>%
dplyr::summarise_at("fee",funs(mean,sd,median)) %>%
mutate(Report=ifelse(Report=="Even","High","Low"))
d
setwd("~/Google Drive/WORK/esperimenti/trento/delegate_decept/ANALISI")
#-----------------------------
d <- readRDS("DATA.rds")
#-----------------------------
# to create treatment labels
d <- d %>% mutate(Lott_type=ifelse(L_B==2,"B<A",ifelse(L_B==3,"B=A","B>A"))) %>% mutate(Lott_type=as.factor(Lott_type))
stats <- d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
dplyr::group_by(Lott_type, Report) %>%
dplyr::summarise_at("fee",funs(mean,sd,median)) %>%
mutate(Report=ifelse(Report=="Even","High","Low"))
stats
ggplot(stats,
aes(x=Report,y=mean,label=mean,fill=Report))+
geom_boxplot(stat="identity",color="black",alpha=.5)+
facet_grid(~Lott_type,switch="y")
ggplot(stats,
aes(x=Report,y=mean,label=mean,fill=Report))+
geom_boxplot()+
facet_grid(~Lott_type,switch="y")
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") ,
aes(x=Report,y=mean,label=mean,fill=Report))+
geom_boxplot()
d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee")
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") ,
aes(x=Report,y=fee))+
geom_boxplot()
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot()+
facet_grid(~Lott_type,switch="y")
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot()+
facet_grid(~Lott_type,switch="y")+
scale_fill_manual(values = getPalette)+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
getPalette
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot()+
facet_grid(~Lott_type,switch="y")+
scale_fill_manual(values = getPalette[1])+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot(fill=getPalette[1])+
facet_grid(~Lott_type,switch="y")+
scale_fill_manual(values = getPalette[1])+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot(fill=getPalette[1])+
facet_grid(~Lott_type,switch="y")+
scale_fill_manual(values = getPalette[2])+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot(fill=getPalette[2])+
facet_grid(~Lott_type,switch="y")+
scale_fill_manual(values = getPalette[2])+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
stats <- d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
dplyr::group_by(Lott_type, Report) %>%
dplyr::summarise_at("fee",funs(mean,sd,median)) %>%
mutate(Report=ifelse(Report=="Even","High","Low"))
ggplot( d %>%
filter(Role=="Subject 2") %>%
filter(treatment=="fee") %>%
mutate(Report=ifelse(Report=="Even","High","Low")),
aes(x=Report,y=fee))+
geom_boxplot(fill=getPalette[1])+
stat_summary(fun.y="mean")+
facet_grid(~Lott_type,switch="y")+
theme_bw() +
labs(title="Fees asked and reported outcome",
subtitle="",
y = "Average fee requested",
x= "Reported outcome",
fill="",
caption="")+ # labels
theme(legend.position="bottom",
axis.text=element_text(size=8),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1,vjust=0.5)) #axis
options(htmltools.dir.version = FALSE)
d %>% select(Lott_type, L_B,  H_B) %>% distinct()
options(htmltools.dir.version = FALSE)
prop.test(pull(stats[i,"x"]), pull(stats[i,"n"]))
stats <- d %>% filter(Role=="Subject 2") %>%
dplyr::group_by(Report, Lott_type) %>%
dplyr::summarise (x=n()) %>%
dplyr::group_by(Lott_type) %>%
dplyr::mutate(n=sum(x)) %>%
dplyr::mutate(rel.freq = round(x/n, 3)) %>%
arrange(Lott_type)
#library(tidyverse)
library(readxl)
library(knitr)
library(RColorBrewer)
library(lme4)
library(formattable)
library(knitr)
library(kableExtra)
library(texreg)
library(tidyverse)
library(zTree)
library(wesanderson)
library(lubridate)
library(gridExtra)
getPalette <- wes_palette("Royal1")
setwd("~/Google Drive/WORK/esperimenti/trento/delegate_decept/ANALISI")
#-----------------------------
d <- readRDS("DATA.rds")
#-----------------------------
# to create treatment labels
d <- d %>% mutate(Lott_type=ifelse(L_B==2,"B-",ifelse(L_B==3,"B=","B+"))) %>% mutate(Lott_type=as.factor(Lott_type))
# to create treatment labels
d <- d %>% mutate(treatment=ifelse(treatment=="cpu\"","cpu",treatment))
d$Lott_type = factor(d$Lott_type,levels(as.factor(d$Lott_type))[c(1,3,2)])
stats <- d %>% filter(Role=="Subject 2") %>%
dplyr::group_by(Report, Lott_type) %>%
dplyr::summarise (x=n()) %>%
dplyr::group_by(Lott_type) %>%
dplyr::mutate(n=sum(x)) %>%
dplyr::mutate(rel.freq = round(x/n, 3)) %>%
arrange(Lott_type)
prop.test(pull(stats[i,"x"]), pull(stats[i,"n"]))
stats
i=1
prop.test(pull(stats[i,"x"]), pull(stats[i,"n"]))
stats
library(RefManageR)
help("RefManageR")
library(RefManageR)
bib <- ReadBib(system.file("Bib", "lit.bib",
package = "RefManageR"), check = FALSE)
library(RefManageR)
bib <- ReadBib(system.file("Bib", "./lit.bib",
package = "RefManageR"), check = FALSE)
setwd("~/Google Drive/WORK/presentaz/conferenze/ESA_virtual2020")
library(RefManageR)
bib <- ReadBib(system.file("Bib", "./lit.bib",
package = "RefManageR"), check = FALSE)
